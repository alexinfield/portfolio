name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Also run on pull request merges to main
  pull_request:
    branches: ["main"]
    types: [closed]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Validate HTML files
        run: |
          echo "Validating HTML files..."
          find . -name "*.html" -type f | while read file; do
            echo "Checking $file"
            if ! head -1 "$file" | grep -q "<!doctype\|<!DOCTYPE"; then
              echo "Warning: $file might be missing DOCTYPE declaration"
            fi
          done
        
      - name: Check for required files
        run: |
          echo "Checking for required files..."
          if [ ! -f "index.html" ]; then
            echo "Error: index.html not found"
            exit 1
          fi
          if [ -f ".nojekyll" ]; then
            echo "âœ“ .nojekyll file found - Jekyll processing disabled"
          else
            echo "Warning: .nojekyll file not found"
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Verify deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Checking if site is accessible..."
          sleep 10
          curl -I "${{ steps.deployment.outputs.page_url }}" || echo "Site might still be propagating..."